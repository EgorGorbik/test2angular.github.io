{"version":3,"sources":["webpack:///./src/app/auth/auth.module.ts","webpack:///./src/app/auth/auth.routing.ts","webpack:///./src/app/auth/login/login.component.html","webpack:///./src/app/auth/login/login.component.scss","webpack:///./src/app/auth/login/login.component.ts","webpack:///./src/app/auth/new-password/new-password.component.html","webpack:///./src/app/auth/new-password/new-password.component.scss","webpack:///./src/app/auth/new-password/new-password.component.ts","webpack:///./src/app/auth/request-reset-password/request-reset-password.component.html","webpack:///./src/app/auth/request-reset-password/request-reset-password.component.scss","webpack:///./src/app/auth/request-reset-password/request-reset-password.component.ts","webpack:///./src/app/auth/services/auth.service.ts","webpack:///./src/app/shared/confirm-equal-validator.directive.ts"],"names":[],"mappings":"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","file":"auth-auth-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport {RouterModule} from '@angular/router';\nimport {AuthRoutes} from './auth.routing';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {AuthService} from './services/auth.service';\nimport { RequestResetPasswordComponent } from './request-reset-password/request-reset-password.component';\nimport { NewPasswordComponent } from './new-password/new-password.component';\nimport {ConfirmEqualValidator} from \"../shared/confirm-equal-validator.directive\";\n\n@NgModule({\n    declarations: [\n        LoginComponent,\n        RequestResetPasswordComponent,\n        NewPasswordComponent,\n        ConfirmEqualValidator\n    ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(AuthRoutes),\n    ReactiveFormsModule,\n  ],\n  providers: [\n      AuthService\n  ]\n})\nexport class AuthModule { }\n","import {Routes} from '@angular/router';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {RequestResetPasswordComponent} from './request-reset-password/request-reset-password.component';\r\nimport {NewPasswordComponent} from './new-password/new-password.component';\r\n\r\nexport const AuthRoutes: Routes = [\r\n    { path: 'login', component: LoginComponent },\r\n    { path: 'request-password', component: RequestResetPasswordComponent},\r\n    {path: 'update-password', component: NewPasswordComponent}\r\n];\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n\\r\\n      <div class=\\\"logo-img\\\">\\r\\n          <img src=\\\"../../../assets/img/pic.png\\\"/>\\r\\n      </div>\\r\\n\\r\\n      <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmitLogin()\\\">\\r\\n        <div\\r\\n          class=\\\"form-group\\\"\\r\\n          [ngClass]=\\\"{invalid: form.get('email').invalid && form.get('email').touched || isWrongData}\\\"\\r\\n        >\\r\\n          <label for=\\\"email\\\">Email address</label>\\r\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter email\\\" formControlName=\\\"email\\\">\\r\\n          <div\\r\\n              *ngIf=\\\"form.get('email').invalid && form.get('email').touched\\\"\\r\\n              class=\\\"validation\\\">\\r\\n            <small\\r\\n              *ngIf=\\\"form.get('email').errors.email\\\"\\r\\n              class=\\\"form-text text-muted\\\">\\r\\n              Enter correct email please\\r\\n          </small>\\r\\n          <small\\r\\n              *ngIf=\\\"form.get('email').errors.required\\\"\\r\\n              class=\\\"form-text text-muted\\\">\\r\\n            Email is required\\r\\n          </small>\\r\\n          </div>\\r\\n          <div\\r\\n                  *ngIf=\\\"isWrongData\\\"\\r\\n                  class=\\\"validation\\\">\\r\\n            <small\\r\\n                    class=\\\"form-text text-muted\\\">\\r\\n              Wrong data\\r\\n            </small>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\"\\r\\n         [ngClass]=\\\"{invalid: form.get('email').invalid && form.get('email').touched}\\\"\\r\\n        >\\r\\n          <label for=\\\"password\\\">Password</label>\\r\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" placeholder=\\\"Password\\\" formControlName=\\\"password\\\">\\r\\n          <div\\r\\n              *ngIf=\\\"form.get('password').invalid && form.get('password').touched\\\"\\r\\n              class=\\\"validation\\\">\\r\\n            <small\\r\\n                  *ngIf=\\\"form.get('password').errors.minlength\\\"\\r\\n                  class=\\\"form-text text-muted\\\">Password length must be at least 6 symbols </small>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-check\\\">\\r\\n          <div class=\\\"remember\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" id=\\\"check\\\">\\r\\n            <label class=\\\"form-check-label\\\" for=\\\"check\\\">Remember</label>\\r\\n          </div>\\r\\n          <div>\\r\\n            <a [routerLink]=\\\"['/request-password']\\\">Forgot password?</a>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"login-btn\\\">\\r\\n          <button\\r\\n                  type=\\\"submit\\\"\\r\\n                  class=\\\"btn btn-primary\\\"\\r\\n                  [disabled]=\\\"form.invalid\\\">\\r\\n            Login\\r\\n          </button>\\r\\n        </div>\\r\\n\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"form {\\n  max-width: 600px;\\n  margin: 0 auto;\\n  height: 100%; }\\n\\n.container {\\n  height: 100%;\\n  width: 100%;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center; }\\n\\n.invalid input {\\n  border: 2px solid red; }\\n\\nsmall {\\n  color: red;\\n  font-weight: 600; }\\n\\n.form-check-input {\\n  margin: 0 5px 0;\\n  height: 16px;\\n  width: 16px; }\\n\\n.remember {\\n  display: flex;\\n  align-items: center; }\\n\\n.form-check-label {\\n  margin: 0px; }\\n\\nlabel {\\n  color: #ffffff;\\n  cursor: pointer; }\\n\\n.logo-img {\\n  text-align: center;\\n  margin-bottom: 30px; }\\n\\n.form-check {\\n  display: flex;\\n  justify-content: space-between; }\\n\\n.btn {\\n  padding: 10px 26px;\\n  margin-top: 30px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9lZ29yZ29yYmlrL0Rlc2t0b3AvQW5ndWxhckdpdC9zcmMvYXBwL2F1dGgvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7RUFDaEIsY0FBYztFQUNkLFlBQVksRUFBQTs7QUFJZDtFQUNFLFlBQVk7RUFDWixXQUFXO0VBQ1gsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixtQkFBbUIsRUFBQTs7QUFHckI7RUFFSSxxQkFBcUIsRUFBQTs7QUFJekI7RUFDRSxVQUFVO0VBQ1YsZ0JBQWdCLEVBQUE7O0FBR2xCO0VBQ0UsZUFBZTtFQUNmLFlBQVk7RUFDWixXQUFXLEVBQUE7O0FBR2I7RUFDRSxhQUFhO0VBQ2IsbUJBQW1CLEVBQUE7O0FBRXJCO0VBQ0UsV0FBVyxFQUFBOztBQUdiO0VBQ0UsY0FBYztFQUNkLGVBQWUsRUFBQTs7QUFHakI7RUFDRSxrQkFBa0I7RUFDbEIsbUJBQW1CLEVBQUE7O0FBR3JCO0VBQ0UsYUFBYTtFQUNiLDhCQUE4QixFQUFBOztBQUVoQztFQUNFLGtCQUFrQjtFQUNsQixnQkFBZ0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2F1dGgvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJmb3JtIHtcclxuICBtYXgtd2lkdGg6IDYwMHB4O1xyXG4gIG1hcmdpbjogMCBhdXRvO1xyXG4gIGhlaWdodDogMTAwJTtcclxuXHJcbn1cclxuXHJcbi5jb250YWluZXIge1xyXG4gIGhlaWdodDogMTAwJTtcclxuICB3aWR0aDogMTAwJTtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5pbnZhbGlkIHtcclxuICBpbnB1dCB7XHJcbiAgICBib3JkZXI6IDJweCBzb2xpZCByZWQ7XHJcbiAgfVxyXG59XHJcblxyXG5zbWFsbCB7XHJcbiAgY29sb3I6IHJlZDtcclxuICBmb250LXdlaWdodDogNjAwO1xyXG59XHJcblxyXG4uZm9ybS1jaGVjay1pbnB1dCB7XHJcbiAgbWFyZ2luOiAwIDVweCAwO1xyXG4gIGhlaWdodDogMTZweDtcclxuICB3aWR0aDogMTZweDtcclxufVxyXG5cclxuLnJlbWVtYmVyIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuLmZvcm0tY2hlY2stbGFiZWwge1xyXG4gIG1hcmdpbjogMHB4O1xyXG59XHJcblxyXG5sYWJlbCB7XHJcbiAgY29sb3I6ICNmZmZmZmY7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG4ubG9nby1pbWcge1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBtYXJnaW4tYm90dG9tOiAzMHB4O1xyXG59XHJcblxyXG4uZm9ybS1jaGVjayB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbn1cclxuLmJ0biB7XHJcbiAgcGFkZGluZzogMTBweCAyNnB4O1xyXG4gIG1hcmdpbi10b3A6IDMwcHg7XHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {User} from \"../../shared/interfaces\";\nimport {AuthService} from \"../../auth.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  form: FormGroup;\n  isWrongData = false;\n  constructor(\n      private authService: AuthService,\n      private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.form = new FormGroup({\n      email: new FormControl(null,[\n          Validators.required,\n        Validators.email\n      ]),\n      password: new FormControl(null, [\n          Validators.required,\n          Validators.minLength(6)\n      ])\n    })\n  }\n\n  onSubmitLogin() {\n\n    const user: User = {\n      email: this.form.value.email,\n      password: this.form.value.password\n    }\n\n    // отправить запрос на сервер с этими данными и если все хорошо сделать редирект\n    this.authService.loginAdmin(user).subscribe((data: any) => {\n      localStorage.setItem('accessToken', data.accessToken)\n      console.log(data);\n      this.authService.setLoggedInStatus(true);\n      this.router.navigate(['/companies']);\n    }, error => {\n      console.log(error.error.error);\n      this.isWrongData = true;\n    })\n  }\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n\\n      <div class=\\\"logo-img\\\">\\n        <img src=\\\"../../../assets/img/pic.png\\\"/>\\n      </div>\\n\\n      <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmitPassword()\\\">\\n\\n        <div class=\\\"form-group\\\"\\n             [ngClass]=\\\"{invalid: form.get('password').invalid && form.get('password').touched}\\\"\\n        >\\n          <label for=\\\"password\\\">Password</label>\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" placeholder=\\\"Password\\\" formControlName=\\\"password\\\">\\n          <div\\n                  *ngIf=\\\"form.get('password').invalid && form.get('password').touched\\\"\\n                  class=\\\"validation\\\">\\n            <small\\n                    *ngIf=\\\"form.get('password').errors.minlength\\\"\\n                    class=\\\"form-text text-muted\\\">Password length must be at least 6 symbols\\n            </small>\\n          </div>\\n          <label for=\\\"password-confirm\\\">Confirm password</label>\\n          <input\\n                  appConfirmEqualValidator=\\\"password\\\"\\n                  type=\\\"password\\\" class=\\\"form-control\\\"\\n                  id=\\\"password-confirm\\\" placeholder=\\\"Confirm password\\\"\\n                  formControlName=\\\"passwordConfirm\\\">\\n\\n          <div\\n                  *ngIf=\\\"form.get('passwordConfirm').invalid && form.get('passwordConfirm').touched\\\"\\n                  class=\\\"validation\\\">\\n            <small\\n                    *ngIf=\\\"form.get('passwordConfirm').errors.minlength\\\"\\n                    class=\\\"form-text text-muted\\\">Password length must be at least 6 symbols\\n            </small>\\n            <small\\n                    *ngIf=\\\"form.get('passwordConfirm').errors.notEqual\\\"\\n                    class=\\\"form-text text-muted\\\">Password and Confirm password not equal\\n            </small>\\n          </div>\\n        </div>\\n\\n\\n        <div class=\\\"login-btn\\\">\\n          <button\\n                  type=\\\"submit\\\"\\n                  class=\\\"btn btn-primary\\\"\\n                  [disabled]=\\\"form.invalid\\\">\\n            Update password\\n          </button>\\n        </div>\\n\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"form {\\n  max-width: 600px;\\n  margin: 0 auto;\\n  height: 100%; }\\n\\n.container {\\n  height: 100%;\\n  width: 100%;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center; }\\n\\n.invalid input {\\n  border: 2px solid red; }\\n\\nlabel {\\n  color: #ffffff;\\n  cursor: pointer;\\n  margin-top: 20px; }\\n\\n.btn {\\n  padding: 10px 26px;\\n  margin-top: 30px; }\\n\\nsmall {\\n  color: red;\\n  font-weight: 600;\\n  display: block;\\n  margin: 10px 0; }\\n\\n.invalid input {\\n  border: 2px solid red; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9lZ29yZ29yYmlrL0Rlc2t0b3AvQW5ndWxhckdpdC9zcmMvYXBwL2F1dGgvbmV3LXBhc3N3b3JkL25ldy1wYXNzd29yZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQjtFQUNoQixjQUFjO0VBQ2QsWUFBWSxFQUFBOztBQUlkO0VBQ0UsWUFBWTtFQUNaLFdBQVc7RUFDWCxhQUFhO0VBQ2IsdUJBQXVCO0VBQ3ZCLG1CQUFtQixFQUFBOztBQUdyQjtFQUVJLHFCQUFxQixFQUFBOztBQUl6QjtFQUNFLGNBQWM7RUFDZCxlQUFlO0VBQ2YsZ0JBQWdCLEVBQUE7O0FBR2xCO0VBQ0Usa0JBQWtCO0VBQ2xCLGdCQUFnQixFQUFBOztBQUdsQjtFQUNFLFVBQVU7RUFDVixnQkFBZ0I7RUFDaEIsY0FBYztFQUNkLGNBQWMsRUFBQTs7QUFHaEI7RUFFSSxxQkFBcUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2F1dGgvbmV3LXBhc3N3b3JkL25ldy1wYXNzd29yZC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImZvcm0ge1xyXG4gIG1heC13aWR0aDogNjAwcHg7XHJcbiAgbWFyZ2luOiAwIGF1dG87XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG5cclxufVxyXG5cclxuLmNvbnRhaW5lciB7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufVxyXG5cclxuLmludmFsaWQge1xyXG4gIGlucHV0IHtcclxuICAgIGJvcmRlcjogMnB4IHNvbGlkIHJlZDtcclxuICB9XHJcbn1cclxuXHJcbmxhYmVsIHtcclxuICBjb2xvcjogI2ZmZmZmZjtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgbWFyZ2luLXRvcDogMjBweDtcclxufVxyXG5cclxuLmJ0biB7XHJcbiAgcGFkZGluZzogMTBweCAyNnB4O1xyXG4gIG1hcmdpbi10b3A6IDMwcHg7XHJcbn1cclxuXHJcbnNtYWxsIHtcclxuICBjb2xvcjogcmVkO1xyXG4gIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgbWFyZ2luOiAxMHB4IDA7XHJcbn1cclxuXHJcbi5pbnZhbGlkIHtcclxuICBpbnB1dCB7XHJcbiAgICBib3JkZXI6IDJweCBzb2xpZCByZWQ7XHJcbiAgfVxyXG59XHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\n\n@Component({\n  selector: 'app-new-password',\n  templateUrl: './new-password.component.html',\n  styleUrls: ['./new-password.component.scss']\n})\nexport class NewPasswordComponent implements OnInit {\n  form: FormGroup;\n  constructor() { }\n\n  ngOnInit() {\n      this.form = new FormGroup({\n        password: new FormControl(null,[\n          Validators.required,\n          Validators.minLength(6)\n        ]),\n        passwordConfirm: new FormControl(null, [\n          Validators.required\n        ])\n      })\n  }\n\n  onSubmitPassword() {\n    console.log(this.form)\n  }\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"logo-img\\\">\\n        <img src=\\\"../../../assets/img/pic.png\\\"/>\\n      </div>\\n      <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmitForgotPassword()\\\">\\n        <h4>Forgot Password</h4>\\n        <div class=\\\"form-group\\\"\\n             [ngClass]=\\\"{invalid: form.get('email').invalid && form.get('email').touched}\\\">\\n          <label for=\\\"email\\\">Email address</label>\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter email\\\" formControlName=\\\"email\\\">\\n          <div\\n                class=\\\"validation\\\"\\n               *ngIf=\\\"form.get('email').invalid && form.get('email').touched\\\">\\n            <small\\n                    *ngIf=\\\"form.get('email').errors.email\\\"\\n                    class=\\\"form-text text-muted\\\">\\n              Enter correct email please\\n            </small>\\n            <small\\n                    *ngIf=\\\"form.get('email').errors.required\\\"\\n                    class=\\\"form-text text-muted\\\">\\n              Email is required\\n            </small>\\n          </div>\\n          <button\\n                  type=\\\"submit\\\"\\n                  class=\\\"btn btn-primary\\\"\\n                  [disabled]=\\\"form.invalid\\\">\\n            Reset password\\n          </button>\\n\\n          <a [routerLink]=\\\"['/login']\\\">\\n            <i class=\\\"pe-7s-left-arrow\\\"></i>\\n            Back to login\\n          </a>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"label {\\n  color: #ffffff;\\n  cursor: pointer; }\\n\\n.btn {\\n  padding: 10px 26px;\\n  margin-top: 30px; }\\n\\nsmall {\\n  color: red;\\n  font-weight: 600;\\n  display: block;\\n  margin: 10px 0; }\\n\\n.invalid input {\\n  border: 2px solid red; }\\n\\nform {\\n  max-width: 600px;\\n  margin: 0 auto;\\n  height: 100%; }\\n\\n.container {\\n  height: 100%;\\n  width: 100%;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center; }\\n\\n.logo-img {\\n  margin-bottom: 30px; }\\n\\nh4 {\\n  color: #3472F7;\\n  text-align: center;\\n  margin-bottom: 30px; }\\n\\na {\\n  margin-top: 40px;\\n  text-align: center;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center; }\\n\\na i {\\n    margin-right: 10px;\\n    font-size: 18px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9lZ29yZ29yYmlrL0Rlc2t0b3AvQW5ndWxhckdpdC9zcmMvYXBwL2F1dGgvcmVxdWVzdC1yZXNldC1wYXNzd29yZC9yZXF1ZXN0LXJlc2V0LXBhc3N3b3JkLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBYztFQUNkLGVBQWUsRUFBQTs7QUFHakI7RUFDRSxrQkFBa0I7RUFDbEIsZ0JBQWdCLEVBQUE7O0FBR2xCO0VBQ0UsVUFBVTtFQUNWLGdCQUFnQjtFQUNoQixjQUFjO0VBQ2QsY0FBYyxFQUFBOztBQUdoQjtFQUVJLHFCQUFxQixFQUFBOztBQUd2QjtFQUNFLGdCQUFnQjtFQUNoQixjQUFjO0VBQ2QsWUFBWSxFQUFBOztBQUlkO0VBQ0UsWUFBWTtFQUNaLFdBQVc7RUFDWCxhQUFhO0VBQ2IsdUJBQXVCO0VBQ3ZCLG1CQUFtQixFQUFBOztBQUdyQjtFQUNFLG1CQUFtQixFQUFBOztBQUdyQjtFQUNFLGNBQWM7RUFDZCxrQkFBa0I7RUFDbEIsbUJBQW1CLEVBQUE7O0FBR3JCO0VBQ0UsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQixhQUFhO0VBQ2IsdUJBQXVCO0VBQ3ZCLG1CQUFtQixFQUFBOztBQUxyQjtJQU9JLGtCQUFrQjtJQUNsQixlQUFlLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9hdXRoL3JlcXVlc3QtcmVzZXQtcGFzc3dvcmQvcmVxdWVzdC1yZXNldC1wYXNzd29yZC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImxhYmVsIHtcclxuICBjb2xvcjogI2ZmZmZmZjtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbi5idG4ge1xyXG4gIHBhZGRpbmc6IDEwcHggMjZweDtcclxuICBtYXJnaW4tdG9wOiAzMHB4O1xyXG59XHJcblxyXG5zbWFsbCB7XHJcbiAgY29sb3I6IHJlZDtcclxuICBmb250LXdlaWdodDogNjAwO1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIG1hcmdpbjogMTBweCAwO1xyXG59XHJcblxyXG4uaW52YWxpZCB7XHJcbiAgaW5wdXQge1xyXG4gICAgYm9yZGVyOiAycHggc29saWQgcmVkO1xyXG4gIH1cclxufVxyXG4gIGZvcm0ge1xyXG4gICAgbWF4LXdpZHRoOiA2MDBweDtcclxuICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG5cclxuICB9XHJcblxyXG4gIC5jb250YWluZXIge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIH1cclxuXHJcbiAgLmxvZ28taW1nIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XHJcbiAgfVxyXG5cclxuICBoNCB7XHJcbiAgICBjb2xvcjogIzM0NzJGNztcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XHJcbiAgfVxyXG5cclxuICBhIHtcclxuICAgIG1hcmdpbi10b3A6IDQwcHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgaSB7XHJcbiAgICAgIG1hcmdpbi1yaWdodDogMTBweDtcclxuICAgICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgfVxyXG4gIH1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-request-reset-password',\n  templateUrl: './request-reset-password.component.html',\n  styleUrls: ['./request-reset-password.component.scss']\n})\nexport class RequestResetPasswordComponent implements OnInit {\n  form: FormGroup;\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n    this.form = new FormGroup({\n      email: new FormControl(null, [\n        Validators.required,\n        Validators.email\n      ])\n    })\n  }\n\n  onSubmitForgotPassword() {\n    this.router.navigate(['/update-password'])\n  }\n};\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {User} from \"../../shared/interfaces\";\nimport {Observable} from \"rxjs\";\n\n@Injectable()\nexport class AuthService {\n\n  constructor(private http: HttpClient) {}\n\n  get token(): string {\n    return ''\n  }\n\n  private setToken() {\n\n  }\n\n  login(user: User): Observable<any> {\n    return this.http.post('', user)\n  }\n\n  logout(user: User) {\n\n  }\n  isAuthenticated(): boolean {\n    return !this.token\n  }\n}\n","import {AbstractControl, NG_VALIDATORS, Validator} from '@angular/forms';\r\nimport {Directive, Input} from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[appConfirmEqualValidator]',\r\n    providers: [{\r\n        provide: NG_VALIDATORS,\r\n        useExisting: ConfirmEqualValidator,\r\n        multi: true\r\n    }]\r\n})\r\nexport class ConfirmEqualValidator implements Validator {\r\n    @Input() appConfirmEqualValidator: string;\r\n\r\n    validate(control: AbstractControl): {[key: string]: any} | null {\r\n        const controlCompare = control.parent.get(this.appConfirmEqualValidator);\r\n        if (controlCompare && controlCompare.value !== control.value) {\r\n            return { 'notEqual': true }\r\n        }\r\n\r\n        return null\r\n    }\r\n}\r\n\r\n"],"sourceRoot":""}